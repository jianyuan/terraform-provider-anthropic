openapi: 3.0.0
info:
  title: Anthropic API
  version: 1.0.0
servers:
  - url: https://api.anthropic.com
    description: Anthropic API
    variables: {}
paths:
  /v1/organizations/users:
    get:
      operationId: listUsers
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: before_id
          in: query
          schema:
            type: string
        - name: after_id
          in: query
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - has_more
                  - first_id
                  - last_id
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                  has_more:
                    type: boolean
                  first_id:
                    type: string
                    nullable: true
                  last_id:
                    type: string
                    nullable: true
  /v1/organizations/users/{user_id}:
    get:
      operationId: getUser
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /v1/organizations/workspaces:
    get:
      operationId: listWorkspaces
      parameters:
        - name: include_archived
          in: query
          schema:
            type: boolean
        - name: limit
          in: query
          schema:
            type: integer
        - name: before_id
          in: query
          schema:
            type: string
        - name: after_id
          in: query
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - has_more
                  - first_id
                  - last_id
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Workspace"
                  has_more:
                    type: boolean
                  first_id:
                    type: string
                    nullable: true
                  last_id:
                    type: string
                    nullable: true
    post:
      operationId: createWorkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
  /v1/organizations/workspaces/{workspace_id}:
    get:
      operationId: getWorkspace
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
    post:
      operationId: updateWorkspace
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
  /v1/organizations/workspaces/{workspace_id}/archive:
    post:
      operationId: archiveWorkspace
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
  /v1/organizations/workspaces/{workspace_id}/members:
    get:
      operationId: listWorkspaceMembers
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
        - name: before_id
          in: query
          schema:
            type: string
        - name: after_id
          in: query
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - has_more
                  - first_id
                  - last_id
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/WorkspaceMember"
                  has_more:
                    type: boolean
                  first_id:
                    type: string
                    nullable: true
                  last_id:
                    type: string
                    nullable: true
    post:
      operationId: createWorkspaceMember
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - workspace_role
              properties:
                user_id:
                  type: string
                workspace_role:
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkspaceMember"
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/organizations/workspaces/{workspace_id}/members/{user_id}:
    get:
      operationId: getWorkspaceMember
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkspaceMember"
    post:
      operationId: updateWorkspaceMember
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - workspace_role
              properties:
                workspace_role:
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkspaceMember"
    delete:
      operationId: deleteWorkspaceMember
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkspaceMember"
security:
  - apiKeyAuth: []
  - versionHeader: []
components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
    versionHeader:
      type: apiKey
      in: header
      name: anthropic-version
  schemas:
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - type
            - message
          properties:
            type:
              type: string
            message:
              type: string
    User:
      type: object
      required:
        - id
        - name
        - email
        - role
        - added_at
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
        added_at:
          type: string
    Workspace:
      type: object
      required:
        - id
        - name
        - created_at
        - archived_at
        - display_color
      properties:
        id:
          type: string
        name:
          type: string
        created_at:
          type: string
        archived_at:
          type: string
          nullable: true
        display_color:
          type: string
    WorkspaceMember:
      type: object
      required:
        - user_id
        - workspace_id
        - workspace_role
      properties:
        user_id:
          type: string
        workspace_id:
          type: string
        workspace_role:
          type: string
